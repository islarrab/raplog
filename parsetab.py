
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xf2\xcf#B\xbf\x1f\xb4\xcf\x85\xe9\xe3a\x0e;\xd5\xf7'
    
_lr_action_items = {'EQEQ':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,89,93,95,97,101,108,],[-54,-51,-55,-52,-53,43,-50,-49,43,-56,43,-37,-48,43,43,None,-47,None,None,None,43,None,None,-44,-45,-46,-57,43,43,43,-58,43,43,]),'LCURLY':([10,14,15,18,19,20,26,31,32,35,39,54,55,59,60,61,62,63,64,65,66,67,68,69,70,86,89,93,97,107,],[25,-54,-51,-55,-52,-53,-25,-50,-49,-56,-37,-24,-48,-35,-43,-47,-38,-42,-39,-36,-41,-40,-44,-45,-46,-57,25,25,-58,25,]),'WHILE':([12,14,15,18,19,20,23,25,31,32,35,37,39,52,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,78,82,84,86,88,91,94,95,97,98,102,103,109,],[-17,-54,-51,-55,-52,-53,-16,-1,-50,-49,-56,-60,-37,73,-48,-59,-35,-43,-47,-38,-42,-39,-36,-41,-40,-44,-45,-46,-14,-11,73,-12,-10,-15,-13,-57,-7,-18,-19,-20,-58,-23,-21,-30,-22,]),'MINUS':([9,13,14,15,16,17,18,19,20,21,22,23,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,73,80,83,86,89,92,93,95,97,101,104,108,],[13,13,-54,-51,13,13,-55,-52,-53,13,13,50,-50,-49,50,13,-56,50,-37,13,13,13,13,13,13,13,13,13,13,13,13,-48,50,13,50,50,-47,50,50,50,50,50,50,-44,-45,-46,13,13,13,-57,50,13,50,50,-58,50,13,50,]),'DIVIDE':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,89,93,95,97,101,108,],[-54,-51,-55,-52,-53,42,-50,-49,42,-56,42,-37,-48,42,42,42,-47,42,42,42,42,42,42,42,42,-46,-57,42,42,42,-58,42,42,]),'RPAREN':([11,14,15,18,19,20,29,31,32,33,35,39,53,55,59,60,61,62,63,64,65,66,67,68,69,70,86,92,96,97,99,100,101,105,106,108,110,],[26,-54,-51,-55,-52,-53,54,-50,-49,55,-56,-37,-26,-48,-35,-43,-47,-38,-42,-39,-36,-41,-40,-44,-45,-46,-57,-63,-27,-58,103,-32,-63,-34,-31,-63,-33,]),'GET':([12,14,15,18,19,20,23,25,31,32,35,37,39,52,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,78,82,84,86,88,91,94,95,97,98,102,103,109,],[-17,-54,-51,-55,-52,-53,-16,-1,-50,-49,-56,-60,-37,81,-48,-59,-35,-43,-47,-38,-42,-39,-36,-41,-40,-44,-45,-46,-14,-11,81,-12,-10,-15,-13,-57,-7,-18,-19,-20,-58,-23,-21,-30,-22,]),'NE':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,89,93,95,97,101,108,],[-54,-51,-55,-52,-53,45,-50,-49,45,-56,45,-37,-48,45,45,None,-47,None,None,None,45,None,None,-44,-45,-46,-57,45,45,45,-58,45,45,]),'LT':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,89,93,95,97,101,108,],[-54,-51,-55,-52,-53,48,-50,-49,48,-56,48,-37,-48,48,48,None,-47,None,None,None,48,None,None,-44,-45,-46,-57,48,48,48,-58,48,48,]),'PLUS':([9,13,14,15,16,17,18,19,20,21,22,23,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,73,80,83,86,89,92,93,95,97,101,104,108,],[16,16,-54,-51,16,16,-55,-52,-53,16,16,49,-50,-49,49,16,-56,49,-37,16,16,16,16,16,16,16,16,16,16,16,16,-48,49,16,49,49,-47,49,49,49,49,49,49,-44,-45,-46,16,16,16,-57,49,16,49,49,-58,49,16,49,]),'OUT':([11,85,],[30,30,]),'MTEQ':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,89,93,95,97,101,108,],[-54,-51,-55,-52,-53,41,-50,-49,41,-56,41,-37,-48,41,41,None,-47,None,None,None,41,None,None,-44,-45,-46,-57,41,41,41,-58,41,41,]),'STRING':([9,13,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,73,80,83,92,104,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'RBRACK':([14,15,18,19,20,21,31,32,35,36,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,87,97,],[-54,-51,-55,-52,-53,37,-50,-49,-56,57,-61,-37,-48,86,-35,-43,-47,-38,-42,-39,-36,-41,-40,-44,-45,-46,-57,-62,-58,]),'TIMES':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,89,93,95,97,101,108,],[-54,-51,-55,-52,-53,51,-50,-49,51,-56,51,-37,-48,51,51,51,-47,51,51,51,51,51,51,51,51,-46,-57,51,51,51,-58,51,51,]),'NOT':([9,13,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,73,80,83,92,104,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'LPAREN':([4,8,9,13,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,73,79,80,83,92,104,],[-2,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,92,17,17,17,17,]),'IN':([11,85,],[28,28,]),'COMA':([14,15,18,19,20,31,32,35,38,39,53,55,59,60,61,62,63,64,65,66,67,68,69,70,86,97,101,108,],[-54,-51,-55,-52,-53,-50,-49,-56,58,-37,85,-48,-35,-43,-47,-38,-42,-39,-36,-41,-40,-44,-45,-46,-57,-58,104,104,]),'ELSE':([88,102,],[-7,107,]),'EQ':([4,79,],[9,9,]),'ID':([0,1,3,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,32,34,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,78,80,81,82,83,84,86,88,91,92,94,95,97,98,102,103,104,109,],[4,4,4,18,-17,18,-54,-51,18,18,-55,-52,-53,18,18,-16,-6,-1,53,-28,-29,-50,-49,18,-56,-60,-37,18,18,18,18,18,18,18,18,18,18,18,18,79,-48,-59,18,-35,-43,-47,-38,-42,-39,-36,-41,-40,-44,-45,-46,-14,18,-11,79,-12,-10,18,94,-15,18,-13,-57,-7,-18,18,-19,-20,-58,-23,-21,-30,18,-22,]),'IF':([12,14,15,18,19,20,23,25,31,32,35,37,39,52,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,78,82,84,86,88,91,94,95,97,98,102,103,109,],[-17,-54,-51,-55,-52,-53,-16,-1,-50,-49,-56,-60,-37,80,-48,-59,-35,-43,-47,-38,-42,-39,-36,-41,-40,-44,-45,-46,-14,-11,80,-12,-10,-15,-13,-57,-7,-18,-19,-20,-58,-23,-21,-30,-22,]),'AND':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,89,93,95,97,101,108,],[-54,-51,-55,-52,-53,40,-50,-49,40,-56,40,-37,-48,40,-35,-43,-47,-38,-42,-39,40,-41,-40,-44,-45,-46,-57,40,40,40,-58,40,40,]),'INT':([9,13,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,73,80,83,92,104,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'LTEQ':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,89,93,95,97,101,108,],[-54,-51,-55,-52,-53,44,-50,-49,44,-56,44,-37,-48,44,44,None,-47,None,None,None,44,None,None,-44,-45,-46,-57,44,44,44,-58,44,44,]),'FLOAT':([9,13,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,73,80,83,92,104,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'LBRACK':([9,18,86,],[21,34,34,]),'MT':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,89,93,95,97,101,108,],[-54,-51,-55,-52,-53,47,-50,-49,47,-56,47,-37,-48,47,47,None,-47,None,None,None,47,None,None,-44,-45,-46,-57,47,47,47,-58,47,47,]),'RCURLY':([12,14,15,18,19,20,23,25,31,32,35,37,39,52,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,82,84,86,88,90,91,94,95,97,98,102,103,109,],[-17,-54,-51,-55,-52,-53,-16,-1,-50,-49,-56,-60,-37,-63,-48,-59,-35,-43,-47,-38,-42,-39,-36,-41,-40,-44,-45,-46,-14,88,-11,-63,-12,-9,-10,-15,-13,-57,-7,-8,-18,-19,-20,-58,-23,-21,-30,-22,]),'PUT':([12,14,15,18,19,20,23,25,31,32,35,37,39,52,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,78,82,84,86,88,91,94,95,97,98,102,103,109,],[-17,-54,-51,-55,-52,-53,-16,-1,-50,-49,-56,-60,-37,83,-48,-59,-35,-43,-47,-38,-42,-39,-36,-41,-40,-44,-45,-46,-14,-11,83,-12,-10,-15,-13,-57,-7,-18,-19,-20,-58,-23,-21,-30,-22,]),'$end':([0,1,2,3,5,6,7,12,14,15,18,19,20,23,24,31,32,35,37,39,55,57,59,60,61,62,63,64,65,66,67,68,69,70,86,88,97,],[-63,-63,0,-63,-5,-4,-3,-17,-54,-51,-55,-52,-53,-16,-6,-50,-49,-56,-60,-37,-48,-59,-35,-43,-47,-38,-42,-39,-36,-41,-40,-44,-45,-46,-57,-7,-58,]),'OR':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,89,93,95,97,101,108,],[-54,-51,-55,-52,-53,46,-50,-49,46,-56,46,-37,-48,46,-35,-43,-47,-38,-42,-39,-36,-41,-40,-44,-45,-46,-57,46,46,46,-58,46,46,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'selection':([52,75,],[71,71,]),'statements':([52,75,],[72,90,]),'callparams':([79,],[91,]),'param_type':([11,85,],[27,27,]),'array':([9,],[12,]),'raplog':([0,1,3,],[2,6,7,]),'varcte':([9,13,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,73,80,83,92,104,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'new_scope':([25,],[52,]),'array_elements':([21,58,],[36,87,]),'call':([52,75,],[74,74,]),'array_index':([18,86,],[35,97,]),'statement':([52,75,],[75,75,]),'input':([52,75,],[76,76,]),'callparams1':([92,],[99,]),'empty':([0,1,3,52,75,92,101,108,],[5,5,5,77,77,100,105,105,]),'callparams2':([101,108,],[106,110,]),'function':([0,1,3,],[1,1,1,]),'statements-block':([10,89,93,107,],[24,98,102,109,]),'assignment':([0,1,3,52,75,],[3,3,3,78,78,]),'defparams1':([11,85,],[29,96,]),'add_proc':([4,],[8,]),'while':([52,75,],[82,82,]),'defparams':([8,],[10,]),'output':([52,75,],[84,84,]),'expression':([9,13,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,73,80,83,92,104,],[23,31,32,33,38,39,56,59,60,61,62,63,64,65,66,67,68,69,70,38,89,93,95,101,108,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> raplog","S'",1,None,None,None),
  ('new_scope -> <empty>','new_scope',0,'p_new_scope','parser.py',124),
  ('add_proc -> <empty>','add_proc',0,'p_add_proc','parser.py',128),
  ('raplog -> assignment raplog','raplog',2,'p_raplog','parser.py',134),
  ('raplog -> function raplog','raplog',2,'p_raplog','parser.py',135),
  ('raplog -> empty','raplog',1,'p_raplog_empty','parser.py',139),
  ('function -> ID add_proc defparams statements-block','function',4,'p_function','parser.py',143),
  ('statements-block -> LCURLY new_scope statements RCURLY','statements-block',4,'p_statements_block','parser.py',149),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',154),
  ('statements -> empty','statements',1,'p_statements_empty','parser.py',158),
  ('statement -> assignment','statement',1,'p_statement','parser.py',162),
  ('statement -> call','statement',1,'p_statement','parser.py',163),
  ('statement -> input','statement',1,'p_statement','parser.py',164),
  ('statement -> output','statement',1,'p_statement','parser.py',165),
  ('statement -> selection','statement',1,'p_statement','parser.py',166),
  ('statement -> while','statement',1,'p_statement','parser.py',167),
  ('assignment -> ID EQ expression','assignment',3,'p_assignment_expression','parser.py',171),
  ('assignment -> ID EQ array','assignment',3,'p_assignment_array','parser.py',177),
  ('call -> ID callparams','call',2,'p_call','parser.py',182),
  ('input -> GET ID','input',2,'p_input','parser.py',188),
  ('output -> PUT expression','output',2,'p_output','parser.py',195),
  ('selection -> IF expression statements-block','selection',3,'p_selection','parser.py',199),
  ('selection -> IF expression statements-block ELSE statements-block','selection',5,'p_selection_else','parser.py',203),
  ('while -> WHILE expression statements-block','while',3,'p_while','parser.py',207),
  ('defparams -> LPAREN defparams1 RPAREN','defparams',3,'p_defparams','parser.py',211),
  ('defparams -> LPAREN RPAREN','defparams',2,'p_defparams','parser.py',212),
  ('defparams1 -> param_type ID','defparams1',2,'p_defparams1','parser.py',216),
  ('defparams1 -> param_type ID COMA defparams1','defparams1',4,'p_defparams1','parser.py',217),
  ('param_type -> IN','param_type',1,'p_param_type','parser.py',224),
  ('param_type -> OUT','param_type',1,'p_param_type','parser.py',225),
  ('callparams -> LPAREN callparams1 RPAREN','callparams',3,'p_callparams','parser.py',230),
  ('callparams1 -> expression callparams2','callparams1',2,'p_callparams1','parser.py',235),
  ('callparams1 -> empty','callparams1',1,'p_callparams1','parser.py',236),
  ('callparams2 -> COMA expression callparams2','callparams2',3,'p_callparams2','parser.py',241),
  ('callparams2 -> empty','callparams2',1,'p_callparams2','parser.py',242),
  ('expression -> expression AND expression','expression',3,'p_expression_boolean','parser.py',248),
  ('expression -> expression OR expression','expression',3,'p_expression_boolean','parser.py',249),
  ('expression -> NOT expression','expression',2,'p_expression_boolean_not','parser.py',253),
  ('expression -> expression EQEQ expression','expression',3,'p_expression_comparison','parser.py',257),
  ('expression -> expression NE expression','expression',3,'p_expression_comparison','parser.py',258),
  ('expression -> expression LT expression','expression',3,'p_expression_comparison','parser.py',259),
  ('expression -> expression MT expression','expression',3,'p_expression_comparison','parser.py',260),
  ('expression -> expression LTEQ expression','expression',3,'p_expression_comparison','parser.py',261),
  ('expression -> expression MTEQ expression','expression',3,'p_expression_comparison','parser.py',262),
  ('expression -> expression PLUS expression','expression',3,'p_expression_arithmetic','parser.py',266),
  ('expression -> expression MINUS expression','expression',3,'p_expression_arithmetic','parser.py',267),
  ('expression -> expression TIMES expression','expression',3,'p_expression_arithmetic','parser.py',268),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_arithmetic','parser.py',269),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',273),
  ('expression -> PLUS expression','expression',2,'p_expression_uplus','parser.py',277),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',281),
  ('expression -> varcte','expression',1,'p_expression_element','parser.py',285),
  ('varcte -> INT','varcte',1,'p_varcte_constant','parser.py',289),
  ('varcte -> FLOAT','varcte',1,'p_varcte_constant','parser.py',290),
  ('varcte -> STRING','varcte',1,'p_varcte_constant','parser.py',291),
  ('varcte -> ID','varcte',1,'p_varcte_id','parser.py',295),
  ('varcte -> ID array_index','varcte',2,'p_varcte_id_array','parser.py',305),
  ('array_index -> LBRACK expression RBRACK','array_index',3,'p_array_index','parser.py',318),
  ('array_index -> LBRACK expression RBRACK array_index','array_index',4,'p_array_index','parser.py',319),
  ('array -> LBRACK array_elements RBRACK','array',3,'p_array','parser.py',327),
  ('array -> LBRACK RBRACK','array',2,'p_array_empty','parser.py',332),
  ('array_elements -> expression','array_elements',1,'p_array_elements','parser.py',336),
  ('array_elements -> expression COMA array_elements','array_elements',3,'p_array_elements_2','parser.py',340),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',344),
]
