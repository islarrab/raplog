
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '"\xb10\xf7Y\xed\x85\x04\x19fR\nr\x7f\x82\xf4'
    
_lr_action_items = {'EQEQ':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,96,97,101,],[-59,-56,-60,-57,-58,43,-54,-53,43,-61,43,43,-55,43,43,None,-51,None,None,None,43,None,None,-48,-49,-50,-62,43,43,-63,43,43,]),'LCURLY':([10,14,15,18,19,20,26,31,32,35,39,54,55,59,60,61,62,63,64,65,66,67,68,69,70,86,92,96,97,102,103,110,112,],[25,-59,-56,-60,-57,-58,-31,-54,-53,-61,-52,-30,-55,-40,-47,-51,-42,-46,-43,-41,-45,-44,-48,-49,-50,-62,-23,-63,-28,25,25,-24,25,]),'WHILE':([12,14,15,18,19,20,23,25,31,32,35,37,39,52,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,78,82,84,86,88,93,94,96,104,106,107,109,111,113,114,],[-17,-59,-56,-60,-57,-58,-16,-1,-54,-53,-61,-65,-52,73,-55,-64,-40,-47,-51,-42,-46,-43,-41,-45,-44,-48,-49,-50,-14,-11,73,-12,-10,-15,-13,-62,-7,-19,-20,-63,-18,-25,-29,-21,-26,-25,-22,]),'MINUS':([9,13,14,15,16,17,18,19,20,21,22,23,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,73,80,83,86,89,91,92,94,96,97,101,105,],[13,13,-59,-56,13,13,-60,-57,-58,13,13,50,-54,-53,50,13,-61,50,50,13,13,13,13,13,13,13,13,13,13,13,13,-55,50,13,50,50,-51,50,50,50,50,50,50,-48,-49,-50,-27,13,13,-62,13,13,50,50,-63,50,50,13,]),'DIVIDE':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,96,97,101,],[-59,-56,-60,-57,-58,42,-54,-53,42,-61,42,42,-55,42,42,42,-51,42,42,42,42,42,42,42,42,-50,-62,42,42,-63,42,42,]),'RPAREN':([11,14,15,18,19,20,29,31,32,33,35,39,53,55,59,60,61,62,63,64,65,66,67,68,69,70,86,91,95,96,98,99,100,101,108,],[26,-59,-56,-60,-57,-58,54,-54,-53,55,-61,-52,-32,-55,-40,-47,-51,-42,-46,-43,-41,-45,-44,-48,-49,-50,-62,-68,-33,-63,104,-36,-37,-39,-38,]),'GET':([12,14,15,18,19,20,23,25,31,32,35,37,39,52,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,78,82,84,86,88,93,94,96,104,106,107,109,111,113,114,],[-17,-59,-56,-60,-57,-58,-16,-1,-54,-53,-61,-65,-52,81,-55,-64,-40,-47,-51,-42,-46,-43,-41,-45,-44,-48,-49,-50,-14,-11,81,-12,-10,-15,-13,-62,-7,-19,-20,-63,-18,-25,-29,-21,-26,-25,-22,]),'NE':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,96,97,101,],[-59,-56,-60,-57,-58,45,-54,-53,45,-61,45,45,-55,45,45,None,-51,None,None,None,45,None,None,-48,-49,-50,-62,45,45,-63,45,45,]),'LT':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,96,97,101,],[-59,-56,-60,-57,-58,48,-54,-53,48,-61,48,48,-55,48,48,None,-51,None,None,None,48,None,None,-48,-49,-50,-62,48,48,-63,48,48,]),'PLUS':([9,13,14,15,16,17,18,19,20,21,22,23,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,73,80,83,86,89,91,92,94,96,97,101,105,],[16,16,-59,-56,16,16,-60,-57,-58,16,16,49,-54,-53,49,16,-61,49,49,16,16,16,16,16,16,16,16,16,16,16,16,-55,49,16,49,49,-51,49,49,49,49,49,49,-48,-49,-50,-27,16,16,-62,16,16,49,49,-63,49,49,16,]),'OUT':([11,85,],[30,30,]),'MTEQ':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,96,97,101,],[-59,-56,-60,-57,-58,41,-54,-53,41,-61,41,41,-55,41,41,None,-51,None,None,None,41,None,None,-48,-49,-50,-62,41,41,-63,41,41,]),'STRING':([9,13,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,73,80,83,89,91,105,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-27,14,14,14,14,14,]),'RBRACK':([14,15,18,19,20,21,31,32,35,36,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,87,96,],[-59,-56,-60,-57,-58,37,-54,-53,-61,57,-66,-52,-55,86,-40,-47,-51,-42,-46,-43,-41,-45,-44,-48,-49,-50,-62,-67,-63,]),'TIMES':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,96,97,101,],[-59,-56,-60,-57,-58,51,-54,-53,51,-61,51,51,-55,51,51,51,-51,51,51,51,51,51,51,51,51,-50,-62,51,51,-63,51,51,]),'NOT':([9,13,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,73,80,83,89,91,105,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-27,22,22,22,22,22,]),'LPAREN':([4,8,9,13,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,73,79,80,83,89,91,105,],[-2,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-27,91,17,17,17,17,17,]),'IN':([11,85,],[28,28,]),'COMA':([14,15,18,19,20,31,32,35,38,39,53,55,59,60,61,62,63,64,65,66,67,68,69,70,86,96,101,],[-59,-56,-60,-57,-58,-54,-53,-61,58,-52,85,-55,-40,-47,-51,-42,-46,-43,-41,-45,-44,-48,-49,-50,-62,-63,105,]),'ELSE':([88,106,],[-7,110,]),'EQ':([4,79,],[9,9,]),'ID':([0,1,3,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,32,34,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,78,80,81,82,83,84,86,88,89,91,93,94,96,104,105,106,107,109,111,113,114,],[4,4,4,18,-17,18,-59,-56,18,18,-60,-57,-58,18,18,-16,-6,-1,53,-34,-35,-54,-53,18,-61,-65,-52,18,18,18,18,18,18,18,18,18,18,18,18,79,-55,-64,18,-40,-47,-51,-42,-46,-43,-41,-45,-44,-48,-49,-50,-14,-27,-11,79,-12,-10,18,93,-15,18,-13,-62,-7,18,18,-19,-20,-63,-18,18,-25,-29,-21,-26,-25,-22,]),'IF':([12,14,15,18,19,20,23,25,31,32,35,37,39,52,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,78,82,84,86,88,93,94,96,104,106,107,109,111,113,114,],[-17,-59,-56,-60,-57,-58,-16,-1,-54,-53,-61,-65,-52,80,-55,-64,-40,-47,-51,-42,-46,-43,-41,-45,-44,-48,-49,-50,-14,-11,80,-12,-10,-15,-13,-62,-7,-19,-20,-63,-18,-25,-29,-21,-26,-25,-22,]),'AND':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,96,97,101,],[-59,-56,-60,-57,-58,40,-54,-53,40,-61,40,-52,-55,40,-40,-47,-51,-42,-46,-43,40,-45,-44,-48,-49,-50,-62,40,40,-63,40,40,]),'INT':([9,13,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,73,80,83,89,91,105,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-27,19,19,19,19,19,]),'LTEQ':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,96,97,101,],[-59,-56,-60,-57,-58,44,-54,-53,44,-61,44,44,-55,44,44,None,-51,None,None,None,44,None,None,-48,-49,-50,-62,44,44,-63,44,44,]),'FLOAT':([9,13,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,73,80,83,89,91,105,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-27,20,20,20,20,20,]),'LBRACK':([9,18,86,],[21,34,34,]),'MT':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,96,97,101,],[-59,-56,-60,-57,-58,47,-54,-53,47,-61,47,47,-55,47,47,None,-51,None,None,None,47,None,None,-48,-49,-50,-62,47,47,-63,47,47,]),'RCURLY':([12,14,15,18,19,20,23,25,31,32,35,37,39,52,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,82,84,86,88,90,93,94,96,104,106,107,109,111,113,114,],[-17,-59,-56,-60,-57,-58,-16,-1,-54,-53,-61,-65,-52,-68,-55,-64,-40,-47,-51,-42,-46,-43,-41,-45,-44,-48,-49,-50,-14,88,-11,-68,-12,-9,-10,-15,-13,-62,-7,-8,-19,-20,-63,-18,-25,-29,-21,-26,-25,-22,]),'PUT':([12,14,15,18,19,20,23,25,31,32,35,37,39,52,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,78,82,84,86,88,93,94,96,104,106,107,109,111,113,114,],[-17,-59,-56,-60,-57,-58,-16,-1,-54,-53,-61,-65,-52,83,-55,-64,-40,-47,-51,-42,-46,-43,-41,-45,-44,-48,-49,-50,-14,-11,83,-12,-10,-15,-13,-62,-7,-19,-20,-63,-18,-25,-29,-21,-26,-25,-22,]),'$end':([0,1,2,3,5,6,7,12,14,15,18,19,20,23,24,31,32,35,37,39,55,57,59,60,61,62,63,64,65,66,67,68,69,70,86,88,96,],[-68,-68,0,-68,-5,-4,-3,-17,-59,-56,-60,-57,-58,-16,-6,-54,-53,-61,-65,-52,-55,-64,-40,-47,-51,-42,-46,-43,-41,-45,-44,-48,-49,-50,-62,-7,-63,]),'OR':([14,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,96,97,101,],[-59,-56,-60,-57,-58,46,-54,-53,46,-61,46,-52,-55,46,-40,-47,-51,-42,-46,-43,-41,-45,-44,-48,-49,-50,-62,46,46,-63,46,46,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'w3':([107,],[111,]),'selection':([52,75,],[71,71,]),'statements':([52,75,],[72,90,]),'callparams':([91,],[98,]),'param_type':([11,85,],[27,27,]),'w2':([97,],[103,]),'w1':([73,],[89,]),'array':([9,],[12,]),'raplog':([0,1,3,],[2,6,7,]),'varcte':([9,13,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,80,83,89,91,105,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'new_scope':([25,],[52,]),'array_elements':([21,58,],[36,87,]),'call':([52,75,],[74,74,]),'array_index':([18,86,],[35,96,]),'statement':([52,75,],[75,75,]),'input':([52,75,],[76,76,]),'callparams1':([91,105,],[99,108,]),'empty':([0,1,3,52,75,91,],[5,5,5,77,77,100,]),'function':([0,1,3,],[1,1,1,]),'statements-block':([10,102,103,112,],[24,106,107,113,]),'i1':([92,],[102,]),'assignment':([0,1,3,52,75,],[3,3,3,78,78,]),'i3':([106,113,],[109,114,]),'i2':([110,],[112,]),'defparams1':([11,85,],[29,95,]),'add_proc':([4,],[8,]),'while':([52,75,],[82,82,]),'defparams':([8,],[10,]),'output':([52,75,],[84,84,]),'expression':([9,13,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,80,83,89,91,105,],[23,31,32,33,38,39,56,59,60,61,62,63,64,65,66,67,68,69,70,38,92,94,97,101,101,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> raplog","S'",1,None,None,None),
  ('new_scope -> <empty>','new_scope',0,'p_new_scope','parser.py',121),
  ('add_proc -> <empty>','add_proc',0,'p_add_proc','parser.py',125),
  ('raplog -> assignment raplog','raplog',2,'p_raplog','parser.py',131),
  ('raplog -> function raplog','raplog',2,'p_raplog','parser.py',132),
  ('raplog -> empty','raplog',1,'p_raplog_empty','parser.py',135),
  ('function -> ID add_proc defparams statements-block','function',4,'p_function','parser.py',138),
  ('statements-block -> LCURLY new_scope statements RCURLY','statements-block',4,'p_statements_block','parser.py',143),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',147),
  ('statements -> empty','statements',1,'p_statements_empty','parser.py',150),
  ('statement -> assignment','statement',1,'p_statement','parser.py',153),
  ('statement -> call','statement',1,'p_statement','parser.py',154),
  ('statement -> input','statement',1,'p_statement','parser.py',155),
  ('statement -> output','statement',1,'p_statement','parser.py',156),
  ('statement -> selection','statement',1,'p_statement','parser.py',157),
  ('statement -> while','statement',1,'p_statement','parser.py',158),
  ('assignment -> ID EQ expression','assignment',3,'p_assignment_expression','parser.py',161),
  ('assignment -> ID EQ array','assignment',3,'p_assignment_array','parser.py',168),
  ('call -> ID LPAREN callparams RPAREN','call',4,'p_call','parser.py',172),
  ('input -> GET ID','input',2,'p_input','parser.py',180),
  ('output -> PUT expression','output',2,'p_output','parser.py',187),
  ('selection -> IF expression i1 statements-block i3','selection',5,'p_selection','parser.py',192),
  ('selection -> IF expression i1 statements-block ELSE i2 statements-block i3','selection',8,'p_selection_else','parser.py',195),
  ('i1 -> <empty>','i1',0,'p_i1','parser.py',198),
  ('i2 -> <empty>','i2',0,'p_i2','parser.py',206),
  ('i3 -> <empty>','i3',0,'p_i3','parser.py',213),
  ('while -> WHILE w1 expression w2 statements-block w3','while',6,'p_while','parser.py',218),
  ('w1 -> <empty>','w1',0,'p_w1','parser.py',221),
  ('w2 -> <empty>','w2',0,'p_w2','parser.py',225),
  ('w3 -> <empty>','w3',0,'p_w3','parser.py',233),
  ('defparams -> LPAREN defparams1 RPAREN','defparams',3,'p_defparams','parser.py',240),
  ('defparams -> LPAREN RPAREN','defparams',2,'p_defparams','parser.py',241),
  ('defparams1 -> param_type ID','defparams1',2,'p_defparams1','parser.py',245),
  ('defparams1 -> param_type ID COMA defparams1','defparams1',4,'p_defparams1','parser.py',246),
  ('param_type -> IN','param_type',1,'p_param_type','parser.py',253),
  ('param_type -> OUT','param_type',1,'p_param_type','parser.py',254),
  ('callparams -> callparams1','callparams',1,'p_callparams','parser.py',258),
  ('callparams -> empty','callparams',1,'p_callparams','parser.py',259),
  ('callparams1 -> expression COMA callparams1','callparams1',3,'p_callparams1','parser.py',263),
  ('callparams1 -> expression','callparams1',1,'p_callparams1','parser.py',264),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','parser.py',268),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','parser.py',269),
  ('expression -> expression EQEQ expression','expression',3,'p_expression_binop','parser.py',270),
  ('expression -> expression NE expression','expression',3,'p_expression_binop','parser.py',271),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','parser.py',272),
  ('expression -> expression MT expression','expression',3,'p_expression_binop','parser.py',273),
  ('expression -> expression LTEQ expression','expression',3,'p_expression_binop','parser.py',274),
  ('expression -> expression MTEQ expression','expression',3,'p_expression_binop','parser.py',275),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',276),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',277),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',278),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',279),
  ('expression -> NOT expression','expression',2,'p_expression_unop_not','parser.py',286),
  ('expression -> PLUS expression','expression',2,'p_expression_unop_uplus','parser.py',293),
  ('expression -> MINUS expression','expression',2,'p_expression_unop_uminus','parser.py',300),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',307),
  ('expression -> varcte','expression',1,'p_expression_element','parser.py',310),
  ('varcte -> INT','varcte',1,'p_varcte_constant','parser.py',314),
  ('varcte -> FLOAT','varcte',1,'p_varcte_constant','parser.py',315),
  ('varcte -> STRING','varcte',1,'p_varcte_constant','parser.py',316),
  ('varcte -> ID','varcte',1,'p_varcte_id','parser.py',320),
  ('varcte -> ID array_index','varcte',2,'p_varcte_id_array','parser.py',328),
  ('array_index -> LBRACK expression RBRACK','array_index',3,'p_array_index','parser.py',339),
  ('array_index -> LBRACK expression RBRACK array_index','array_index',4,'p_array_index','parser.py',340),
  ('array -> LBRACK array_elements RBRACK','array',3,'p_array','parser.py',347),
  ('array -> LBRACK RBRACK','array',2,'p_array_empty','parser.py',352),
  ('array_elements -> expression','array_elements',1,'p_array_elements','parser.py',357),
  ('array_elements -> expression COMA array_elements','array_elements',3,'p_array_elements_2','parser.py',360),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',363),
]
