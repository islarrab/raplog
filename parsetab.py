
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xc8\xfe\xdbR\x8b\x8d\xe8\xa1i\x8d_\xf3\xa9#\xa3m'
    
_lr_action_items = {'LPAREN':([4,7,30,31,34,36,48,49,51,53,54,58,69,77,80,81,82,84,85,86,87,88,89,90,91,92,101,123,],[-3,11,49,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'EQEQ':([50,52,55,56,57,59,62,64,70,73,74,75,76,78,79,99,104,105,106,107,108,110,111,112,113,114,115,116,117,118,124,125,130,],[-40,-59,-41,-38,-39,84,84,84,84,84,-58,-57,84,-42,-45,84,-56,84,84,None,-55,None,None,None,None,None,-52,-53,-54,84,84,-60,-61,]),'LCURLY':([9,10,22,50,52,55,56,57,59,64,74,75,78,79,104,106,107,108,109,110,111,112,113,114,115,116,117,118,125,130,],[13,13,-24,-40,-59,-41,-38,-39,13,13,-58,-57,-42,-45,-56,-43,-51,-55,13,-46,-50,-47,-49,-48,-52,-53,-54,-44,-60,-61,]),'MINUS':([31,34,36,48,49,50,51,52,53,54,55,56,57,58,59,62,64,69,70,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,99,101,104,105,106,107,108,110,111,112,113,114,115,116,117,118,123,124,125,130,],[51,51,51,51,51,-40,51,-59,51,51,-41,-38,-39,51,90,90,90,51,90,90,-58,-57,90,51,-42,-45,51,51,51,51,51,51,51,51,51,51,51,51,90,51,-56,90,90,90,-55,90,90,90,90,90,-52,-53,-54,90,51,90,-60,-61,]),'RPAREN':([11,15,17,21,23,37,38,40,41,49,50,52,55,56,57,65,71,72,73,74,75,76,78,79,94,96,102,103,104,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,124,125,127,129,130,],[-66,-28,22,-66,-66,-66,-25,-32,-26,-66,-40,-59,-41,-38,-39,-27,100,-35,-66,-58,-57,104,-42,-45,-66,-66,-37,-34,-56,-43,-51,-55,-46,-50,-47,-49,-48,-52,-53,-54,-44,-30,-66,-29,-66,-60,-31,-36,-61,]),'RCURLY':([13,19,24,25,26,27,28,29,33,35,42,43,44,45,46,47,50,52,55,56,57,60,61,62,63,68,70,74,75,78,79,83,93,98,100,104,106,107,108,110,111,112,113,114,115,116,117,118,122,125,126,130,],[-1,-66,-66,43,-66,-66,-15,-66,-66,-66,-13,-8,-10,-11,-9,-18,-40,-59,-41,-38,-39,-19,-14,-20,-12,-17,-16,-58,-57,-42,-45,-21,-23,-63,-33,-56,-43,-51,-55,-46,-50,-47,-49,-48,-52,-53,-54,-44,-62,-60,-22,-61,]),'NE':([50,52,55,56,57,59,62,64,70,73,74,75,76,78,79,99,104,105,106,107,108,110,111,112,113,114,115,116,117,118,124,125,130,],[-40,-59,-41,-38,-39,86,86,86,86,86,-58,-57,86,-42,-45,86,-56,86,86,None,-55,None,None,None,None,None,-52,-53,-54,86,86,-60,-61,]),'LT':([50,52,55,56,57,59,62,64,70,73,74,75,76,78,79,99,104,105,106,107,108,110,111,112,113,114,115,116,117,118,124,125,130,],[-40,-59,-41,-38,-39,88,88,88,88,88,-58,-57,88,-42,-45,88,-56,88,88,None,-55,None,None,None,None,None,-52,-53,-54,88,88,-60,-61,]),'PLUS':([31,34,36,48,49,50,51,52,53,54,55,56,57,58,59,62,64,69,70,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,99,101,104,105,106,107,108,110,111,112,113,114,115,116,117,118,123,124,125,130,],[53,53,53,53,53,-40,53,-59,53,53,-41,-38,-39,53,89,89,89,53,89,89,-58,-57,89,53,-42,-45,53,53,53,53,53,53,53,53,53,53,53,53,89,53,-56,89,89,89,-55,89,89,89,89,89,-52,-53,-54,89,53,89,-60,-61,]),'GET':([13,19,24,26,27,29,33,35,43,47,50,52,55,56,57,60,62,68,70,74,75,78,79,83,93,98,100,104,106,107,108,110,111,112,113,114,115,116,117,118,122,125,126,130,],[-1,32,32,32,32,32,32,32,-8,-18,-40,-59,-41,-38,-39,-19,-20,-17,-16,-58,-57,-42,-45,-21,-23,-63,-33,-56,-43,-51,-55,-46,-50,-47,-49,-48,-52,-53,-54,-44,-62,-60,-22,-61,]),'$end':([2,12,43,],[0,-4,-8,]),'MTEQ':([50,52,55,56,57,59,62,64,70,73,74,75,76,78,79,99,104,105,106,107,108,110,111,112,113,114,115,116,117,118,124,125,130,],[-40,-59,-41,-38,-39,81,81,81,81,81,-58,-57,81,-42,-45,81,-56,81,81,None,-55,None,None,None,None,None,-52,-53,-54,81,81,-60,-61,]),'DIVIDE':([50,52,55,56,57,59,62,64,70,73,74,75,76,78,79,99,104,105,106,107,108,110,111,112,113,114,115,116,117,118,124,125,130,],[-40,-59,-41,-38,-39,82,82,82,82,82,-58,-57,82,-42,-45,82,-56,82,82,82,-55,82,82,82,82,82,82,82,-54,82,82,-60,-61,]),'RBRACK':([50,52,55,56,57,69,74,75,78,79,97,99,104,105,106,107,108,110,111,112,113,114,115,116,117,118,125,128,130,],[-40,-59,-41,-38,-39,98,-58,-57,-42,-45,122,-64,-56,125,-43,-51,-55,-46,-50,-47,-49,-48,-52,-53,-54,-44,-60,-65,-61,]),'ELSE':([43,83,],[-8,109,]),'START':([0,1,3,5,6,8,14,43,],[-66,-2,-6,-66,9,-5,-7,-8,]),'STR':([31,34,36,48,49,51,53,54,58,69,77,80,81,82,84,85,86,87,88,89,90,91,92,101,123,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'IN':([11,39,],[16,67,]),'COMA':([21,23,37,50,52,55,56,57,73,74,75,78,79,94,96,99,104,106,107,108,110,111,112,113,114,115,116,117,118,120,124,125,130,],[39,39,39,-40,-59,-41,-38,-39,101,-58,-57,-42,-45,39,39,123,-56,-43,-51,-55,-46,-50,-47,-49,-48,-52,-53,-54,-44,39,101,-60,-61,]),'TIMES':([50,52,55,56,57,59,62,64,70,73,74,75,76,78,79,99,104,105,106,107,108,110,111,112,113,114,115,116,117,118,124,125,130,],[-40,-59,-41,-38,-39,91,91,91,91,91,-58,-57,91,-42,-45,91,-56,91,91,91,-55,91,91,91,91,91,91,91,-54,91,91,-60,-61,]),'EQ':([30,],[48,]),'ID':([0,5,13,14,16,18,19,20,24,26,27,29,31,32,33,34,35,36,43,47,48,49,50,51,52,53,54,55,56,57,58,60,62,66,67,68,69,70,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,98,100,101,104,106,107,108,110,111,112,113,114,115,116,117,118,122,123,125,126,130,],[4,4,-1,-7,21,23,30,37,30,30,30,30,55,60,30,55,30,55,-8,-18,55,55,-40,55,-59,55,55,-41,-38,-39,55,-19,-20,94,96,-17,55,-16,-58,-57,55,-42,-45,55,55,55,-21,55,55,55,55,55,55,55,55,55,-23,120,-63,-33,55,-56,-43,-51,-55,-46,-50,-47,-49,-48,-52,-53,-54,-44,-62,55,-60,-22,-61,]),'IF':([13,19,24,26,27,29,33,35,43,47,50,52,55,56,57,60,62,68,70,74,75,78,79,83,93,98,100,104,106,107,108,110,111,112,113,114,115,116,117,118,122,125,126,130,],[-1,31,31,31,31,31,31,31,-8,-18,-40,-59,-41,-38,-39,-19,-20,-17,-16,-58,-57,-42,-45,-21,-23,-63,-33,-56,-43,-51,-55,-46,-50,-47,-49,-48,-52,-53,-54,-44,-62,-60,-22,-61,]),'AND':([50,52,55,56,57,59,62,64,70,73,74,75,76,78,79,99,104,105,106,107,108,110,111,112,113,114,115,116,117,118,124,125,130,],[-40,-59,-41,-38,-39,80,80,80,80,80,-58,-57,80,-42,-45,80,-56,80,-43,-51,-55,-46,-50,-47,-49,-48,-52,-53,-54,80,80,-60,-61,]),'PUT':([13,19,24,26,27,29,33,35,43,47,50,52,55,56,57,60,62,68,70,74,75,78,79,83,93,98,100,104,106,107,108,110,111,112,113,114,115,116,117,118,122,125,126,130,],[-1,34,34,34,34,34,34,34,-8,-18,-40,-59,-41,-38,-39,-19,-20,-17,-16,-58,-57,-42,-45,-21,-23,-63,-33,-56,-43,-51,-55,-46,-50,-47,-49,-48,-52,-53,-54,-44,-62,-60,-22,-61,]),'INT':([31,34,36,48,49,51,53,54,58,69,77,80,81,82,84,85,86,87,88,89,90,91,92,101,123,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'LTEQ':([50,52,55,56,57,59,62,64,70,73,74,75,76,78,79,99,104,105,106,107,108,110,111,112,113,114,115,116,117,118,124,125,130,],[-40,-59,-41,-38,-39,85,85,85,85,85,-58,-57,85,-42,-45,85,-56,85,85,None,-55,None,None,None,None,None,-52,-53,-54,85,85,-60,-61,]),'FLOAT':([31,34,36,48,49,51,53,54,58,69,77,80,81,82,84,85,86,87,88,89,90,91,92,101,123,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'LBRACK':([48,55,125,],[69,77,77,]),'MT':([50,52,55,56,57,59,62,64,70,73,74,75,76,78,79,99,104,105,106,107,108,110,111,112,113,114,115,116,117,118,124,125,130,],[-40,-59,-41,-38,-39,87,87,87,87,87,-58,-57,87,-42,-45,87,-56,87,87,None,-55,None,None,None,None,None,-52,-53,-54,87,87,-60,-61,]),'NOT':([31,34,36,48,49,51,53,54,58,69,77,80,81,82,84,85,86,87,88,89,90,91,92,101,123,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'OUT':([11,16,39,67,],[18,20,66,95,]),'OR':([50,52,55,56,57,59,62,64,70,73,74,75,76,78,79,99,104,105,106,107,108,110,111,112,113,114,115,116,117,118,124,125,130,],[-40,-59,-41,-38,-39,92,92,92,92,92,-58,-57,92,-42,-45,92,-56,92,-43,-51,-55,-46,-50,-47,-49,-48,-52,-53,-54,-44,92,-60,-61,]),'LOOP':([13,19,24,26,27,29,33,35,43,47,50,52,55,56,57,60,62,68,70,74,75,78,79,83,93,98,100,104,106,107,108,110,111,112,113,114,115,116,117,118,122,125,126,130,],[-1,36,36,36,36,36,36,36,-8,-18,-40,-59,-41,-38,-39,-19,-20,-17,-16,-58,-57,-42,-45,-21,-23,-63,-33,-56,-43,-51,-55,-46,-50,-47,-49,-48,-52,-53,-54,-44,-62,-60,-22,-61,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'selection':([19,24,26,27,29,33,35,],[24,24,24,24,24,24,24,]),'statements':([19,24,26,27,29,33,35,],[25,42,44,45,46,61,63,]),'callparams':([30,],[47,]),'array':([48,],[68,]),'add_proc_main':([1,],[6,]),'raplog':([0,],[2,]),'varcte':([31,34,36,48,49,51,53,54,58,69,77,80,81,82,84,85,86,87,88,89,90,91,92,101,123,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'new_scope':([13,],[19,]),'array_elements':([69,123,],[97,128,]),'call':([19,24,26,27,29,33,35,],[26,26,26,26,26,26,26,]),'array_index':([55,125,],[78,130,]),'input':([19,24,26,27,29,33,35,],[27,27,27,27,27,27,27,]),'callparams1':([49,],[71,]),'defparams':([7,],[10,]),'callparams2':([73,124,],[103,129,]),'defs':([0,5,],[1,8,]),'statements-block':([9,10,59,64,109,],[12,14,83,93,126,]),'assignment':([19,24,26,27,29,33,35,],[29,29,29,29,29,29,29,]),'def':([0,5,],[5,5,]),'defparams2':([21,23,37,94,96,120,],[38,41,65,119,121,127,]),'defparams1':([11,],[17,]),'empty':([0,5,11,19,21,23,24,26,27,29,33,35,37,49,73,94,96,120,124,],[3,3,15,28,40,40,28,28,28,28,28,28,40,72,102,40,40,40,102,]),'output':([19,24,26,27,29,33,35,],[35,35,35,35,35,35,35,]),'set_proc':([4,],[7,]),'expression':([31,34,36,48,49,51,53,54,58,69,77,80,81,82,84,85,86,87,88,89,90,91,92,101,123,],[59,62,64,70,73,74,75,76,79,99,105,106,107,108,110,111,112,113,114,115,116,117,118,124,99,]),'loop':([19,24,26,27,29,33,35,],[33,33,33,33,33,33,33,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> raplog","S'",1,None,None,None),
  ('new_scope -> <empty>','new_scope',0,'p_new_scope','parser.py',132),
  ('add_proc_main -> <empty>','add_proc_main',0,'p_add_proc_main','parser.py',136),
  ('set_proc -> <empty>','set_proc',0,'p_set_proc','parser.py',142),
  ('raplog -> defs add_proc_main START statements-block','raplog',4,'p_raplog','parser.py',148),
  ('defs -> def defs','defs',2,'p_defs','parser.py',151),
  ('defs -> empty','defs',1,'p_defs','parser.py',152),
  ('def -> ID set_proc defparams statements-block','def',4,'p_def','parser.py',155),
  ('statements-block -> LCURLY new_scope statements RCURLY','statements-block',4,'p_statements_block','parser.py',158),
  ('statements -> assignment statements','statements',2,'p_statements','parser.py',162),
  ('statements -> call statements','statements',2,'p_statements','parser.py',163),
  ('statements -> input statements','statements',2,'p_statements','parser.py',164),
  ('statements -> output statements','statements',2,'p_statements','parser.py',165),
  ('statements -> selection statements','statements',2,'p_statements','parser.py',166),
  ('statements -> loop statements','statements',2,'p_statements','parser.py',167),
  ('statements -> empty','statements',1,'p_statements','parser.py',168),
  ('assignment -> ID EQ expression','assignment',3,'p_assignment','parser.py',171),
  ('assignment -> ID EQ array','assignment',3,'p_assignment','parser.py',172),
  ('call -> ID callparams','call',2,'p_call','parser.py',178),
  ('input -> GET ID','input',2,'p_input','parser.py',181),
  ('output -> PUT expression','output',2,'p_output','parser.py',184),
  ('selection -> IF expression statements-block','selection',3,'p_selection','parser.py',187),
  ('selection -> IF expression statements-block ELSE statements-block','selection',5,'p_selection','parser.py',188),
  ('loop -> LOOP expression statements-block','loop',3,'p_loop','parser.py',191),
  ('defparams -> LPAREN defparams1 RPAREN','defparams',3,'p_defparams','parser.py',194),
  ('defparams1 -> IN ID defparams2','defparams1',3,'p_defparams1','parser.py',199),
  ('defparams1 -> OUT ID defparams2','defparams1',3,'p_defparams1','parser.py',200),
  ('defparams1 -> IN OUT ID defparams2','defparams1',4,'p_defparams1','parser.py',201),
  ('defparams1 -> empty','defparams1',1,'p_defparams1','parser.py',202),
  ('defparams2 -> COMA IN ID defparams2','defparams2',4,'p_defparams2','parser.py',207),
  ('defparams2 -> COMA OUT ID defparams2','defparams2',4,'p_defparams2','parser.py',208),
  ('defparams2 -> COMA IN OUT ID defparams2','defparams2',5,'p_defparams2','parser.py',209),
  ('defparams2 -> empty','defparams2',1,'p_defparams2','parser.py',210),
  ('callparams -> LPAREN callparams1 RPAREN','callparams',3,'p_callparams','parser.py',215),
  ('callparams1 -> expression callparams2','callparams1',2,'p_callparams1','parser.py',218),
  ('callparams1 -> empty','callparams1',1,'p_callparams1','parser.py',219),
  ('callparams2 -> COMA expression callparams2','callparams2',3,'p_callparams2','parser.py',222),
  ('callparams2 -> empty','callparams2',1,'p_callparams2','parser.py',223),
  ('varcte -> INT','varcte',1,'p_varcte_constant','parser.py',226),
  ('varcte -> FLOAT','varcte',1,'p_varcte_constant','parser.py',227),
  ('varcte -> STR','varcte',1,'p_varcte_constant','parser.py',228),
  ('varcte -> ID','varcte',1,'p_varcte_id','parser.py',232),
  ('varcte -> ID array_index','varcte',2,'p_varcte_id','parser.py',233),
  ('expression -> expression AND expression','expression',3,'p_expression_boolean','parser.py',259),
  ('expression -> expression OR expression','expression',3,'p_expression_boolean','parser.py',260),
  ('expression -> NOT expression','expression',2,'p_expression_boolean','parser.py',261),
  ('expression -> expression EQEQ expression','expression',3,'p_expression_comparison','parser.py',264),
  ('expression -> expression NE expression','expression',3,'p_expression_comparison','parser.py',265),
  ('expression -> expression LT expression','expression',3,'p_expression_comparison','parser.py',266),
  ('expression -> expression MT expression','expression',3,'p_expression_comparison','parser.py',267),
  ('expression -> expression LTEQ expression','expression',3,'p_expression_comparison','parser.py',268),
  ('expression -> expression MTEQ expression','expression',3,'p_expression_comparison','parser.py',269),
  ('expression -> expression PLUS expression','expression',3,'p_expression_arithmetic','parser.py',272),
  ('expression -> expression MINUS expression','expression',3,'p_expression_arithmetic','parser.py',273),
  ('expression -> expression TIMES expression','expression',3,'p_expression_arithmetic','parser.py',274),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_arithmetic','parser.py',275),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',278),
  ('expression -> PLUS expression','expression',2,'p_expression_uplus','parser.py',282),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',286),
  ('expression -> varcte','expression',1,'p_expression_element','parser.py',290),
  ('array_index -> LBRACK expression RBRACK','array_index',3,'p_array_index','parser.py',294),
  ('array_index -> LBRACK expression RBRACK array_index','array_index',4,'p_array_index','parser.py',295),
  ('array -> LBRACK array_elements RBRACK','array',3,'p_array','parser.py',302),
  ('array -> LBRACK RBRACK','array',2,'p_array','parser.py',303),
  ('array_elements -> expression','array_elements',1,'p_array_elements','parser.py',306),
  ('array_elements -> expression COMA array_elements','array_elements',3,'p_array_elements','parser.py',307),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',310),
]
