
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xb9\x1b9a\x1f\xc8\xcd\xc3\x8e\xb76c`\xc5Zf'
    
_lr_action_items = {'STR':([9,14,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,79,81,82,91,104,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'EQEQ':([12,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,95,97,100,108,],[-38,-57,-39,-36,-37,43,-56,-55,43,-40,43,-43,-54,43,43,None,-53,None,None,None,43,None,None,-50,-51,-52,-58,43,43,43,-59,43,43,]),'LCURLY':([10,12,15,18,19,20,26,31,32,35,39,54,55,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,97,107,],[25,-38,-57,-39,-36,-37,-26,-56,-55,-40,-43,-25,-54,-41,-49,-53,-44,-48,-45,-42,-47,-46,-50,-51,-52,-58,25,25,-59,25,]),'MINUS':([9,12,14,15,16,17,18,19,20,21,22,23,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,79,81,82,86,91,92,94,95,97,100,104,108,],[14,-38,14,-57,14,14,-39,-36,-37,14,14,50,-56,-55,50,14,-40,50,-43,14,14,14,14,14,14,14,14,14,14,14,14,-54,50,14,50,50,-53,50,50,50,50,50,50,-50,-51,-52,14,14,14,-58,14,50,50,50,-59,50,14,50,]),'RPAREN':([11,12,15,18,19,20,29,31,32,33,35,39,53,55,59,60,61,62,63,64,65,66,67,68,69,70,86,91,96,97,98,99,100,105,106,108,110,],[26,-38,-57,-39,-36,-37,54,-56,-55,55,-40,-43,-27,-54,-41,-49,-53,-44,-48,-45,-42,-47,-46,-50,-51,-52,-58,-64,-28,-59,103,-33,-64,-35,-32,-64,-34,]),'GET':([12,13,15,18,19,20,23,25,31,32,35,37,39,52,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,83,84,86,88,90,93,95,97,101,102,103,109,],[-38,-18,-57,-39,-36,-37,-17,-1,-56,-55,-40,-61,-43,80,-54,-60,-41,-49,-53,-44,-48,-45,-42,-47,-46,-50,-51,-52,-15,-12,80,-13,-11,-14,-16,-58,-8,-19,-20,-21,-59,-22,-24,-31,-23,]),'NE':([12,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,95,97,100,108,],[-38,-57,-39,-36,-37,45,-56,-55,45,-40,45,-43,-54,45,45,None,-53,None,None,None,45,None,None,-50,-51,-52,-58,45,45,45,-59,45,45,]),'LT':([12,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,95,97,100,108,],[-38,-57,-39,-36,-37,48,-56,-55,48,-40,48,-43,-54,48,48,None,-53,None,None,None,48,None,None,-50,-51,-52,-58,48,48,48,-59,48,48,]),'PLUS':([9,12,14,15,16,17,18,19,20,21,22,23,31,32,33,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,79,81,82,86,91,92,94,95,97,100,104,108,],[16,-38,16,-57,16,16,-39,-36,-37,16,16,49,-56,-55,49,16,-40,49,-43,16,16,16,16,16,16,16,16,16,16,16,16,-54,49,16,49,49,-53,49,49,49,49,49,49,-50,-51,-52,16,16,16,-58,16,49,49,49,-59,49,16,49,]),'OUT':([11,85,],[30,30,]),'MTEQ':([12,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,95,97,100,108,],[-38,-57,-39,-36,-37,41,-56,-55,41,-40,41,-43,-54,41,41,None,-53,None,None,None,41,None,None,-50,-51,-52,-58,41,41,41,-59,41,41,]),'DIVIDE':([12,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,95,97,100,108,],[-38,-57,-39,-36,-37,42,-56,-55,42,-40,42,-43,-54,42,42,42,-53,42,42,42,42,42,42,42,42,-52,-58,42,42,42,-59,42,42,]),'RBRACK':([12,15,18,19,20,21,31,32,35,36,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,87,97,],[-38,-57,-39,-36,-37,37,-56,-55,-40,57,-62,-43,-54,86,-41,-49,-53,-44,-48,-45,-42,-47,-46,-50,-51,-52,-58,-63,-59,]),'TIMES':([12,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,95,97,100,108,],[-38,-57,-39,-36,-37,51,-56,-55,51,-40,51,-43,-54,51,51,51,-53,51,51,51,51,51,51,51,51,-52,-58,51,51,51,-59,51,51,]),'PUT':([12,13,15,18,19,20,23,25,31,32,35,37,39,52,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,83,84,86,88,90,93,95,97,101,102,103,109,],[-38,-18,-57,-39,-36,-37,-17,-1,-56,-55,-40,-61,-43,82,-54,-60,-41,-49,-53,-44,-48,-45,-42,-47,-46,-50,-51,-52,-15,-12,82,-13,-11,-14,-16,-58,-8,-19,-20,-21,-59,-22,-24,-31,-23,]),'LPAREN':([4,8,9,14,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,78,79,81,82,91,104,],[-3,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,91,17,17,17,17,17,]),'IN':([11,85,],[28,28,]),'COMA':([12,15,18,19,20,31,32,35,38,39,53,55,59,60,61,62,63,64,65,66,67,68,69,70,86,97,100,108,],[-38,-57,-39,-36,-37,-56,-55,-40,58,-43,85,-54,-41,-49,-53,-44,-48,-45,-42,-47,-46,-50,-51,-52,-58,-59,104,104,]),'ELSE':([88,101,],[-8,107,]),'EQ':([4,78,],[9,9,]),'ID':([0,1,3,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,32,34,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,79,80,81,82,83,84,86,88,90,91,93,95,97,101,102,103,104,109,],[4,4,4,18,-38,-18,18,-57,18,18,-39,-36,-37,18,18,-17,-7,-1,53,-29,-30,-56,-55,18,-40,-61,-43,18,18,18,18,18,18,18,18,18,18,18,18,78,-54,-60,18,-41,-49,-53,-44,-48,-45,-42,-47,-46,-50,-51,-52,-15,-12,78,-13,-11,18,93,18,18,-14,-16,-58,-8,-19,18,-20,-21,-59,-22,-24,-31,18,-23,]),'IF':([12,13,15,18,19,20,23,25,31,32,35,37,39,52,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,83,84,86,88,90,93,95,97,101,102,103,109,],[-38,-18,-57,-39,-36,-37,-17,-1,-56,-55,-40,-61,-43,79,-54,-60,-41,-49,-53,-44,-48,-45,-42,-47,-46,-50,-51,-52,-15,-12,79,-13,-11,-14,-16,-58,-8,-19,-20,-21,-59,-22,-24,-31,-23,]),'AND':([12,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,95,97,100,108,],[-38,-57,-39,-36,-37,40,-56,-55,40,-40,40,-43,-54,40,-41,-49,-53,-44,-48,-45,40,-47,-46,-50,-51,-52,-58,40,40,40,-59,40,40,]),'INT':([9,14,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,79,81,82,91,104,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'LTEQ':([12,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,95,97,100,108,],[-38,-57,-39,-36,-37,44,-56,-55,44,-40,44,-43,-54,44,44,None,-53,None,None,None,44,None,None,-50,-51,-52,-58,44,44,44,-59,44,44,]),'FLOAT':([9,14,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,79,81,82,91,104,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'LBRACK':([9,18,86,],[21,34,34,]),'MT':([12,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,95,97,100,108,],[-38,-57,-39,-36,-37,47,-56,-55,47,-40,47,-43,-54,47,47,None,-53,None,None,None,47,None,None,-50,-51,-52,-58,47,47,47,-59,47,47,]),'RCURLY':([12,13,15,18,19,20,23,25,31,32,35,37,39,52,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,83,84,86,88,89,90,93,95,97,101,102,103,109,],[-38,-18,-57,-39,-36,-37,-17,-1,-56,-55,-40,-61,-43,-64,-54,-60,-41,-49,-53,-44,-48,-45,-42,-47,-46,-50,-51,-52,-15,88,-12,-64,-13,-10,-11,-14,-16,-58,-8,-9,-19,-20,-21,-59,-22,-24,-31,-23,]),'NOT':([9,14,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,79,81,82,91,104,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'$end':([0,1,2,3,5,6,7,12,13,15,18,19,20,23,24,31,32,35,37,39,55,57,59,60,61,62,63,64,65,66,67,68,69,70,86,88,97,],[-64,-64,0,-64,-6,-5,-4,-38,-18,-57,-39,-36,-37,-17,-7,-56,-55,-40,-61,-43,-54,-60,-41,-49,-53,-44,-48,-45,-42,-47,-46,-50,-51,-52,-58,-8,-59,]),'OR':([12,15,18,19,20,23,31,32,33,35,38,39,55,56,59,60,61,62,63,64,65,66,67,68,69,70,86,92,94,95,97,100,108,],[-38,-57,-39,-36,-37,46,-56,-55,46,-40,46,-43,-54,46,-41,-49,-53,-44,-48,-45,-42,-47,-46,-50,-51,-52,-58,46,46,46,-59,46,46,]),'LOOP':([12,13,15,18,19,20,23,25,31,32,35,37,39,52,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,83,84,86,88,90,93,95,97,101,102,103,109,],[-38,-18,-57,-39,-36,-37,-17,-1,-56,-55,-40,-61,-43,81,-54,-60,-41,-49,-53,-44,-48,-45,-42,-47,-46,-50,-51,-52,-15,-12,81,-13,-11,-14,-16,-58,-8,-19,-20,-21,-59,-22,-24,-31,-23,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'selection':([52,74,],[71,71,]),'statements':([52,74,],[72,89,]),'callparams':([78,],[90,]),'param_type':([11,85,],[27,27,]),'array':([9,],[13,]),'raplog':([0,1,3,],[2,6,7,]),'varcte':([9,14,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,79,81,82,91,104,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'new_scope':([25,],[52,]),'array_elements':([21,58,],[36,87,]),'call':([52,74,],[73,73,]),'array_index':([18,86,],[35,97,]),'statement':([52,74,],[74,74,]),'input':([52,74,],[75,75,]),'callparams1':([91,],[98,]),'empty':([0,1,3,52,74,91,100,108,],[5,5,5,76,76,99,105,105,]),'callparams2':([100,108,],[106,110,]),'function':([0,1,3,],[1,1,1,]),'statements-block':([10,92,94,107,],[24,101,102,109,]),'assignment':([0,1,3,52,74,],[3,3,3,77,77,]),'defparams1':([11,85,],[29,96,]),'add_proc':([4,],[8,]),'defparams':([8,],[10,]),'output':([52,74,],[83,83,]),'expression':([9,14,16,17,21,22,34,40,41,42,43,44,45,46,47,48,49,50,51,58,79,81,82,91,104,],[23,31,32,33,38,39,56,59,60,61,62,63,64,65,66,67,68,69,70,38,92,94,95,100,108,]),'loop':([52,74,],[84,84,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> raplog","S'",1,None,None,None),
  ('new_scope -> <empty>','new_scope',0,'p_new_scope','parser.py',124),
  ('add_proc_main -> <empty>','add_proc_main',0,'p_add_proc_main','parser.py',128),
  ('add_proc -> <empty>','add_proc',0,'p_add_proc','parser.py',132),
  ('raplog -> assignment raplog','raplog',2,'p_raplog','parser.py',138),
  ('raplog -> function raplog','raplog',2,'p_raplog','parser.py',139),
  ('raplog -> empty','raplog',1,'p_raplog_empty','parser.py',143),
  ('function -> ID add_proc defparams statements-block','function',4,'p_function','parser.py',147),
  ('statements-block -> LCURLY new_scope statements RCURLY','statements-block',4,'p_statements_block','parser.py',153),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',158),
  ('statements -> empty','statements',1,'p_statements_empty','parser.py',162),
  ('statement -> assignment','statement',1,'p_statement','parser.py',166),
  ('statement -> call','statement',1,'p_statement','parser.py',167),
  ('statement -> input','statement',1,'p_statement','parser.py',168),
  ('statement -> output','statement',1,'p_statement','parser.py',169),
  ('statement -> selection','statement',1,'p_statement','parser.py',170),
  ('statement -> loop','statement',1,'p_statement','parser.py',171),
  ('assignment -> ID EQ expression','assignment',3,'p_assignment','parser.py',175),
  ('assignment -> ID EQ array','assignment',3,'p_assignment','parser.py',176),
  ('call -> ID callparams','call',2,'p_call','parser.py',183),
  ('input -> GET ID','input',2,'p_input','parser.py',189),
  ('output -> PUT expression','output',2,'p_output','parser.py',193),
  ('selection -> IF expression statements-block','selection',3,'p_selection','parser.py',197),
  ('selection -> IF expression statements-block ELSE statements-block','selection',5,'p_selection_else','parser.py',201),
  ('loop -> LOOP expression statements-block','loop',3,'p_loop','parser.py',205),
  ('defparams -> LPAREN defparams1 RPAREN','defparams',3,'p_defparams','parser.py',209),
  ('defparams -> LPAREN RPAREN','defparams',2,'p_defparams','parser.py',210),
  ('defparams1 -> param_type ID','defparams1',2,'p_defparams1','parser.py',214),
  ('defparams1 -> param_type ID COMA defparams1','defparams1',4,'p_defparams1','parser.py',215),
  ('param_type -> IN','param_type',1,'p_param_type','parser.py',222),
  ('param_type -> OUT','param_type',1,'p_param_type','parser.py',223),
  ('callparams -> LPAREN callparams1 RPAREN','callparams',3,'p_callparams','parser.py',228),
  ('callparams1 -> expression callparams2','callparams1',2,'p_callparams1','parser.py',233),
  ('callparams1 -> empty','callparams1',1,'p_callparams1','parser.py',234),
  ('callparams2 -> COMA expression callparams2','callparams2',3,'p_callparams2','parser.py',239),
  ('callparams2 -> empty','callparams2',1,'p_callparams2','parser.py',240),
  ('varcte -> INT','varcte',1,'p_varcte_constant','parser.py',245),
  ('varcte -> FLOAT','varcte',1,'p_varcte_constant','parser.py',246),
  ('varcte -> STR','varcte',1,'p_varcte_constant','parser.py',247),
  ('varcte -> ID','varcte',1,'p_varcte_id','parser.py',251),
  ('varcte -> ID array_index','varcte',2,'p_varcte_id','parser.py',252),
  ('expression -> expression AND expression','expression',3,'p_expression_boolean','parser.py',263),
  ('expression -> expression OR expression','expression',3,'p_expression_boolean','parser.py',264),
  ('expression -> NOT expression','expression',2,'p_expression_boolean_not','parser.py',268),
  ('expression -> expression EQEQ expression','expression',3,'p_expression_comparison','parser.py',272),
  ('expression -> expression NE expression','expression',3,'p_expression_comparison','parser.py',273),
  ('expression -> expression LT expression','expression',3,'p_expression_comparison','parser.py',274),
  ('expression -> expression MT expression','expression',3,'p_expression_comparison','parser.py',275),
  ('expression -> expression LTEQ expression','expression',3,'p_expression_comparison','parser.py',276),
  ('expression -> expression MTEQ expression','expression',3,'p_expression_comparison','parser.py',277),
  ('expression -> expression PLUS expression','expression',3,'p_expression_arithmetic','parser.py',281),
  ('expression -> expression MINUS expression','expression',3,'p_expression_arithmetic','parser.py',282),
  ('expression -> expression TIMES expression','expression',3,'p_expression_arithmetic','parser.py',283),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_arithmetic','parser.py',284),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',288),
  ('expression -> PLUS expression','expression',2,'p_expression_uplus','parser.py',292),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',296),
  ('expression -> varcte','expression',1,'p_expression_element','parser.py',300),
  ('array_index -> LBRACK expression RBRACK','array_index',3,'p_array_index','parser.py',304),
  ('array_index -> LBRACK expression RBRACK array_index','array_index',4,'p_array_index','parser.py',305),
  ('array -> LBRACK array_elements RBRACK','array',3,'p_array','parser.py',314),
  ('array -> LBRACK RBRACK','array',2,'p_array','parser.py',315),
  ('array_elements -> expression','array_elements',1,'p_array_elements','parser.py',320),
  ('array_elements -> expression COMA array_elements','array_elements',3,'p_array_elements','parser.py',321),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',326),
]
